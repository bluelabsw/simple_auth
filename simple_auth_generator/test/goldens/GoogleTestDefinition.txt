class GoogleTestApi extends GoogleApi implements GoogleTestDefinition {
  GoogleTestApi(
    String identifier, {
    String clientId = 'client_id',
    String clientSecret = 'client_secret',
    String redirectUrl = 'redirecturl',
    List<String>? scopes,
    http.Client? client,
    Converter? converter,
    AuthStorage? authStorage,
  }) : super(identifier, clientId, redirectUrl,
            clientSecret: clientSecret,
            scopes: scopes,
            client: client,
            converter: converter,
            authStorage: authStorage) {
    this.scopes = scopes ?? ['TestScope', 'Scope2'];
  }

  Future<Response<GoogleUser>> getCurrentUserInfo() {
    final url = 'https://www.googleapis.com/oauth2/v1/userinfo?alt=json';
    final request = Request(
      'GET',
      url,
      authenticated: true,
    );
    return send<GoogleUser>(
      request,
      responseType: GoogleUser,
    );
  }

  @override
  Future<Response<Value?>> decodeResponse<Value>(
    Response<String?> response,
    Type responseType,
    bool responseIsList,
  ) async {
    var converted =
        await converter?.decode(response, responseType, responseIsList);
    if (converted != null) return converted as Response<Value?>;
    if (responseType == GoogleUser) {
      final d =
          await jsonConverter.decode(response, responseType, responseIsList);
      final body = responseIsList && d.body is List
          ? new List.from((d.body as List)
              .map((f) => new GoogleUser.fromJson(f as Map<String, dynamic>)))
          : new GoogleUser.fromJson(d.body as Map<String, dynamic>);
      return new Response(d.base, body as Value);
    }
    throw new Exception('No converter found for type $Value');
  }
}
